{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`text-input` is an element that can:\n* guarantee **live**-data to be valid\n* be styled easily\n\nExample:\n```html\n<text-input step=\"2\" min=\"-20\" max=\"140\" pad-length=\"2\"></text-input>\n```\n\nIt sizes automatically. Use `key-up` and `key-down` to increment the value. If `step` is given, the value is a **multiple** of `step`.\n\n### Styling\nCustom property                   | Description                                  | Default\n----------------------------------|----------------------------------------------|--------------------\n`--text-input`                    | style of the input                           | {}\n`--text-input-invalid`            | style of the input                           | {}\n`--text-input-focus`              | style of the focussed and hovered input      | {}\n`--text-input-placeholder`        | style of the placeholder                     | {}\n`--text-input-color`              | color of the input                           | inherit\n`--text-input-background`         | background of the input                      | inherit\n`--text-input-focus-color`        | color of the focussed and hovered input      | inherit\n`--text-input-focus-background`   | background of the focussed and hovered input | inherit\n`--text-input-disabled-color`     | color of the disabled input                  | inherit\n`--text-input-allign`             | allignment of the text of the input          | left\n\n```css\n:host {\n  --text-input-disabled-color: grey;\n  --text-input-focus-background: rgba(0,0,0,0.25);\n  --text-input-focus: {\n    font-weight: bold;\n  };\n  --text-input-placeholder: {\n    color: pink;\n  };\n}\n```",
      "summary": "",
      "path": "text-input.html",
      "properties": [
        {
          "name": "placeholder",
          "type": "string",
          "description": "placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 10
            },
            "end": {
              "line": 97,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 10
            },
            "end": {
              "line": 106,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "pattern",
          "type": "string",
          "description": "regular expression pattern of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_patternChanged\""
            }
          },
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "input",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "value",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "minlength of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "maxlength",
          "type": "number",
          "description": "maxlength of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 10
            },
            "end": {
              "line": 151,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "size",
          "type": "number",
          "description": "size of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "TextInputMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "_checkInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "_patternChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pattern"
            }
          ],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "_inputChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input"
            },
            {
              "name": "oldValueString"
            }
          ],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "TextInputMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 289,
          "column": 4
        },
        "end": {
          "line": 294,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TextInput",
      "attributes": [
        {
          "name": "placeholder",
          "description": "placeholder string",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 10
            },
            "end": {
              "line": 97,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 10
            },
            "end": {
              "line": 106,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "pattern",
          "description": "regular expression pattern of the input",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "input",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "value",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "minlength",
          "description": "minlength of the input",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "maxlength",
          "description": "maxlength of the input",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 10
            },
            "end": {
              "line": 151,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "TextInputMixin"
        },
        {
          "name": "size",
          "description": "size of the input",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "TextInputMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "text-input",
      "mixins": [
        "TextInputMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "mixin to create a text-input",
      "summary": "",
      "path": "text-input.html",
      "properties": [
        {
          "name": "placeholder",
          "type": "string",
          "description": "placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 10
            },
            "end": {
              "line": 97,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 10
            },
            "end": {
              "line": 106,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "pattern",
          "type": "string",
          "description": "regular expression pattern of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_patternChanged\""
            }
          }
        },
        {
          "name": "input",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          }
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "minlength of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "maxlength",
          "type": "number",
          "description": "maxlength of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 10
            },
            "end": {
              "line": 151,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "size",
          "type": "number",
          "description": "size of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_checkInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_patternChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pattern"
            }
          ]
        },
        {
          "name": "_inputChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input"
            },
            {
              "name": "oldValueString"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ]
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 2
        },
        "end": {
          "line": 239,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "TextInputMixin",
      "attributes": [
        {
          "name": "placeholder",
          "description": "placeholder string",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 10
            },
            "end": {
              "line": 97,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 10
            },
            "end": {
              "line": 106,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "pattern",
          "description": "regular expression pattern of the input",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 10
            },
            "end": {
              "line": 116,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "input",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "minlength",
          "description": "minlength of the input",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 10
            },
            "end": {
              "line": 143,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "maxlength",
          "description": "maxlength of the input",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 10
            },
            "end": {
              "line": 151,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "size",
          "description": "size of the input",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
